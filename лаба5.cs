using System;

// Базовий інтерфейс для всіх лікарів
public interface ILікар
{
    string Імя { get; set; }
    int СтажРоків { get; set; }
    decimal Зарплата { get; set; }
    void ПоказатиСтаж();
    void ВиконатиОбовязки();
}

// Абстрактний базовий клас для лікарів
public abstract class Лікар : ILікар
{
    public string Імя { get; set; }
    public int СтажРоків { get; set; }
    public decimal Зарплата { get; set; }

    protected Лікар(string імя, int стаж, decimal зарплата)
    {
        Імя = імя;
        СтажРоків = стаж;
        Зарплата = зарплата;
    }

    public void ПоказатиСтаж()
    {
        Console.WriteLine($"{Імя} має {СтажРоків} років досвіду.");
    }

    public abstract void ВиконатиОбовязки();
}

// Інтерфейс для хірургів
public interface IХірург
{
    void ПровестиОперацію();
}

// Інтерфейс для стоматологічних спеціалістів
public interface IСтоматологічнийФахівець
{
    decimal РозрахуватиОплату(decimal вартістьПроцедури);
}

// Клас для хірургів
public class Хірург : Лікар, IХірург
{
    public string Спеціалізація { get; set; }

    public Хірург(string імя, int стаж, decimal зарплата, string спеціалізація)
        : base(імя, стаж, зарплата)
    {
        Спеціалізація = спеціалізація;
    }

    public override void ВиконатиОбовязки()
    {
        Console.WriteLine($"{Імя} виконує загальні хірургічні обов'язки.");
    }

    public void ПровестиОперацію()
    {
        Console.WriteLine($"{Імя} проводить операцію з {Спеціалізація}.");
    }
}

// Клас для нейрохірургів
public class Нейрохірург : Хірург
{
    public int КількістьОпераційМозку { get; set; }

    public Нейрохірург(string імя, int стаж, decimal зарплата, int операціїМозку)
        : base(імя, стаж, зарплата, "Нейрохірургія")
    {
        КількістьОпераційМозку = операціїМозку;
    }

    public override void ВиконатиОбовязки()
    {
        Console.WriteLine($"{Імя} оглядає неврологічних пацієнтів.");
    }

    public new void ПровестиОперацію()
    {
        Console.WriteLine($"{Імя} проводить складну операцію на мозку.");
    }
}

// Клас для пластичних хірургів
public class ПластичнийХірург : Хірург
{
    public int КількістьКосметичнихПроцедур { get; set; }

    public ПластичнийХірург(string імя, int стаж, decimal зарплата, int процедури)
        : base(імя, стаж, зарплата, "Пластична хірургія")
    {
        КількістьКосметичнихПроцедур = процедури;
    }

    public override void ВиконатиОбовязки()
    {
        Console.WriteLine($"{Імя} консультує з косметичних процедур.");
    }
}

// Абстрактний клас для стоматологічних спеціалістів
public abstract class СтоматологічнийФахівець : Лікар, IСтоматологічнийФахівець
{
    public int КількістьВилікуванихЗубів { get; set; }

    protected СтоматологічнийФахівець(string імя, int стаж, decimal зарплата, int вилікуваніЗуби)
        : base(імя, стаж, зарплата)
    {
        КількістьВилікуванихЗубів = вилікуваніЗуби;
    }

    public abstract decimal РозрахуватиОплату(decimal вартістьПроцедури);
}

// Клас для стоматологів
public class Стоматолог : СтоматологічнийФахівець
{
    public int КількістьПломб { get; set; }

    public Стоматолог(string імя, int стаж, decimal зарплата, int вилікуваніЗуби, int пломби)
        : base(імя, стаж, зарплата, вилікуваніЗуби)
    {
        КількістьПломб = пломби;
    }

    public override void ВиконатиОбовязки()
    {
        Console.WriteLine($"{Імя} оглядає та лікує зуби пацієнтів.");
    }

    public override decimal РозрахуватиОплату(decimal вартістьПроцедури)
    {
        // Стоматологи беруть базову ставку + 20% за досвід
        return вартістьПроцедури + (вартістьПроцедури * 0.2m * (СтажРоків / 10m));
    }
}

// Клас для зубних техніків
public class ЗубнийТехнік : СтоматологічнийФахівець
{
    public int КількістьВиготовленихПротезів { get; set; }

    public ЗубнийТехнік(string імя, int стаж, decimal зарплата, int вилікуваніЗуби, int протези)
        : base(імя, стаж, зарплата, вилікуваніЗуби)
    {
        КількістьВиготовленихПротезів = протези;
    }

    public override void ВиконатиОбовязки()
    {
        Console.WriteLine($"{Імя} виготовляє зубні протези в лабораторії.");
    }

    public override decimal РозрахуватиОплату(decimal вартістьПроцедури)
    {
        // Зубні техніки беруть фіксовану ставку + вартість матеріалів
        return 500 + вартістьПроцедури;
    }
}

class Програма
{
    static void Main(string[] args)
    {
        // Створення лікарів різних спеціальностей
        Лікар[] лікарі = {
            new Нейрохірург("Др. Сміт", 15, 25000, 1200),
            new ПластичнийХірург("Др. Джонсон", 10, 20000, 500),
            new Стоматолог("Др. Браун", 8, 15000, 3000, 2000),
            new ЗубнийТехнік("Др. Вайт", 5, 12000, 1500, 800)
        };

        // Вивід інформації про досвід лікарів
        foreach (var лікар in лікарі)
        {
            лікар.ПоказатиСтаж();
            лікар.ВиконатиОбовязки();

            // Виклик специфічних методів
            if (лікар is IХірург хірург)
            {
                хірург.ПровестиОперацію();
            }

            if (лікар is IСтоматологічнийФахівець стоматолог)
            {
                decimal оплата = стоматолог.РозрахуватиОплату(1000);
                Console.WriteLine($"Оплата за стоматологічну процедуру: {оплата:C}");
            }

            Console.WriteLine();
        }
    }
}